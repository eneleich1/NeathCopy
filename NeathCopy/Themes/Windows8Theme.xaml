<local:Windows8Theme xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     x:Class="Windows8Theme"
                    xmlns:local="clr-namespace:NeathCopy.Themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ControlsStyles/Windows8ToolBarPanel.xaml"/>
        <ResourceDictionary Source="/NeathCopy;component/Resources/ListView.xaml"/>
        <ResourceDictionary Source="/NeathCopy;component/Resources/ComboBox.xaml"/>
        <ResourceDictionary Source="/NeathCopy;component/Resources/TabControl.xaml"/>
        <ResourceDictionary Source="/NeathCopy;component/Resources/ListBoxItem.xaml"/>
        <ResourceDictionary Source="/NeathCopy;component/Resources/Button.xaml"/>
        <ResourceDictionary Source="/NeathCopy;component/Resources/ToolTip.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <CornerRadius x:Key="ComboBoxRadius">0,0,0,0</CornerRadius>
    <CornerRadius x:Key="TabItemRadius">0,6,0,0</CornerRadius> 

    <!-- Constantes -->
    <CornerRadius x:Key="WindowCorderRadius">0,0,0,0</CornerRadius>
    <CornerRadius x:Key="TitleCorderRadius">0,0,0,0</CornerRadius>

    <!-- Base title button style -->
    <Style x:Key="TitleBarRadialButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinHeight" Value="13" />
        <Setter Property="MinWidth" Value="13" />
        <Setter Property="Opacity" Value="0.9" />
    </Style>

    <!-- Close Button -->
    <Style x:Key="CloseRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="ButtonRoot" Height="20" Width="35" Background="Red">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="Red" BlurRadius="0"/>
                        </Grid.Effect>
                        <Image x:Name="Image" Source="/NeathCopy;component/Themes/Images/Windows8Images/close.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="/NeathCopy;component/Themes/Images/Windows8Images/highlighted close.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="15" Duration="0:0:0.3" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="1" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="0" Duration="0:0:0.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="0.9" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button -->
    <Style x:Key="MinimizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="20" Width="25">
                        <Image x:Name="Image" Source="/NeathCopy;component/Themes/Images/Windows8Images/minimize.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="/NeathCopy;component/Themes/Images/Windows8Images/highlighted minimize.bmp" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Maximize Button -->
    <Style x:Key="MaximizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid  Width="25" Height="20">
                        <Image x:Name="Image" Source="/NeathCopy;component/Themes/Images/Windows8Images/maximize.png" Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="/NeathCopy;component/Themes/Images/Windows8Images/highlighted maximize.bmp" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Settings Button -->
    <Style x:Key="SettingsButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="ButtonRoot" Height="20" Width="20" Background="{DynamicResource settingsBrush}">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="Blue" BlurRadius="0"/>
                        </Grid.Effect>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="8" Duration="0:0:0.3" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="1" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="0" Duration="0:0:0.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="0.9" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border defining the frame of the Window -->
    <Style x:Key="WindowBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="{StaticResource WindowCorderRadius}" />
        <Setter Property="Background" Value="#ABABAB" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="TitleBarBackgroundBorder" TargetType="Border">
        <Setter Property="Height" Value="30" />
        <Setter Property="CornerRadius" Value="{StaticResource TitleCorderRadius}" />
        <Setter Property="Background" Value="{DynamicResource TitleBarBackgroundBrush}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="WindowRoot" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="Margin" Value="{DynamicResource WindowRootMargin}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RectBorderStyle" TargetType="Rectangle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Fill" Value="Transparent" />
    </Style>

    <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Border Background="Transparent" SnapsToDevicePixels="True" Width="16" Height="16">
                        <Rectangle Margin="2" >

                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBoxItem Brushes-->
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
   

    <!-- Window Template -->
    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </ControlTemplate.Resources>

        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}" >
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout" Background="{DynamicResource TitleBarBackgroundBrush}">

                    <ResizeGrip x:Name="WindowResizeGrip" Background="Red" 
                            HorizontalAlignment="Right" VerticalAlignment="Bottom"  IsTabStop="false"/>

                    <!-- The title bar. -->
                    <Grid Name="TitleBar" Height="25" Background="{DynamicResource TitleBarBackgroundBrush}" VerticalAlignment="Top" MouseLeftButtonDown="MoveWindow" MouseMove="OnBorderMouseMove" >
                        
                        <Image x:Name="IconApp" Margin="3, 0, 0, 0" Height="20" HorizontalAlignment="Left" Source="{TemplateBinding Icon}"></Image>
                        <TextBlock Foreground="{DynamicResource TextBrush}" Text="{TemplateBinding Title}" FontFamily="{DynamicResource FontFamilyVc}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal" 
                                   MouseLeftButtonDown="MoveWindow" Margin="22,0,0,0"/>

                        <!--Settings Button-->
                        <Button ToolTip="{DynamicResource t29}" Style="{StaticResource SettingsButtonStyle}" Background="{DynamicResource settingsBrush}"  Click="settings_button_Click"  
                                Name="settingsButton"  Margin="85,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" />

                        <!-- Window state buttons -->
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal"  HorizontalAlignment="Right">
                            <Button Style="{StaticResource MinimizeRadialButton}" Click="MinimizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <Button  Style="{StaticResource MaximizeRadialButton}" Click="MaximizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <Button  Style="{StaticResource CloseRadialButton}" Click="CloseWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0" />
                        </StackPanel>
                    </Grid>

                    <!-- The window content. -->
                    <Border x:Name="WindowContent" Margin="0,25,0,0">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>

                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

     <!--ContainerStyle-->
    <Style x:Key="ContainerStyle" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="150"/>
        <Setter Property="MinWidth" Value="250"/>
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template" Value="{StaticResource WindowTemplate}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--UsedWindowTemplate-->
    <ControlTemplate x:Key="UsedWindowTemplate" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </ControlTemplate.Resources>

        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}" >
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout" Background="{DynamicResource ClientAreaBackgroundBrush}">

                    <ResizeGrip x:Name="WindowResizeGrip" Height="0" Background="Transparent"
                            VerticalAlignment="Bottom"  IsTabStop="false" Visibility="Hidden"/>

                        <!-- The title bar. -->
                    <Grid Name="TitleBar" Background="{DynamicResource ClientAreaBackgroundBrush}" VerticalAlignment="Top"  MouseLeftButtonDown="MoveWindow" MouseMove="OnBorderMouseMove" >

                            <StackPanel Orientation="Horizontal" Margin="3" Height="20">
                                <Image x:Name="IconApp"  HorizontalAlignment="Left" Source="{TemplateBinding Icon}"></Image>
                                <TextBlock Foreground="{DynamicResource TextBrush}" Text="{TemplateBinding Title}" FontFamily="{DynamicResource FontFamilyVc}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal" 
                                   MouseLeftButtonDown="MoveWindow" Margin="3,0,0,0"/>
                            </StackPanel>

                            <!-- Window state buttons -->
                            <StackPanel VerticalAlignment="Center" Margin="3" Orientation="Horizontal"  HorizontalAlignment="Right">
                                <Button Style="{StaticResource MinimizeRadialButton}" Click="MinimizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                <Button  Style="{StaticResource MaximizeRadialButton}" Click="MaximizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                <Button  Style="{StaticResource CloseRadialButton}" Click="CloseWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0" />
                            </StackPanel>
                        </Grid>

                        <!-- The window content. -->
                        <Border x:Name="WindowContent" Margin="0,23,0,0">
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Border>

                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--UsedWindowStyle-->
    <Style x:Key="UsedWindowStyle" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template" Value="{StaticResource UsedWindowTemplate}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--TextBlock to set Foreground-->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

</local:Windows8Theme>